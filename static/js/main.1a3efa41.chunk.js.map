{"version":3,"sources":["resources/csv/RawSpawnData.csv","resources/csv/RawWaterSpawnData.csv","resources/csv/HeadbuttSpawnData.csv","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","types","regionSorting","Kanto","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","sourceData","land","water","headbutt","filteredData","repelTrickData","sortByColumns","pokedexNumber","_sortArea","min","tier","evolution_synonyms","require","state","filter","name","area","sortBy","column","direction","sorted","settings","localStorage","getItem","JSON","parse","csv_files","Promise","all","map","file","resolve","reject","Papa","header","download","skipEmptyLines","complete","error","then","results","data","_dataParser","type","membersAccessible","padStart","membership","length","morning","day","night","region","parseInt","levels","match","replace","max","repelId","heldItem","regex","tokens","split","forEach","token","tokenIndex","push","react_default","a","createElement","key","href","concat","arguments","undefined","target","rel","hasOwnProperty","fname","name_match","findPokemonSynonyms","synonym","_this2","farea","fareaReg","RegExp","entry","pokemon","_filterMatchSynonym","e","_","cloneDeep","sort","_this3","reverse","setState","location","areaRepelData","prominent_group_count","Math","apply","toConsumableArray","values","prominent_group_max_level_index","indexOf","prominent_group_max_level","keys","preventDefault","alternateDirection","rarity","console","Error","setting","value","setItem","stringify","quickListData","b","id","forceUpdate","inQuickList","getQuickList","saveQuickList","remove","find","_this4","Segment","List","horizontal","index","Item","Button","className","onClick","setFilter","_ref","_this5","icon_morning","src","alt","title","icon_day","icon_night","icon_rod","icons_rod","Old","Good","Super","_this$state$sortBy","number_of_results","Container","Form","Dropdown","placeholder","search","selection","clearable","onChange","obj","options","text","Input","icon","link","Field","Checkbox","label","checked","setSetting","Table","compact","basic","sortable","unstackable","Header","Row","HeaderCell","Fragment","textAlign","Body","repelTrickPossible","Cell","Icon","removeFromQuickList","aria-hidden","addToQuickList","rod","getTierClassName","renderQuickList","Component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a3efa41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RawSpawnData.1daa5028.csv\";","module.exports = __webpack_public_path__ + \"static/media/RawWaterSpawnData.ce1ee5a1.csv\";","module.exports = __webpack_public_path__ + \"static/media/HeadbuttSpawnData.5e104bfc.csv\";","import React, {Component} from 'react';\nimport * as Papa from 'papaparse';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport './resources/pokdex_sprites.css';\nimport {Button, Checkbox, Container, Dropdown, Form, Icon, Input, List, Segment, Table} from \"semantic-ui-react\";\nimport _ from 'lodash';\n\nclass App extends Component {\n\n    types = ['land', 'water', 'headbutt'];\n    regionSorting = {\n        Kanto: 1,\n        Johto: 2,\n        Hoenn: 3,\n        Sinnoh: 4,\n        Unova: 5,\n        Kalos: 6,\n        Alola: 7,\n    };\n\n    sourceData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    filteredData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    repelTrickData = {};\n\n    sortByColumns = {\n        pokedexNumber: ['pokedexNumber', '_sortArea', 'location'],\n        _sortArea: ['_sortArea', 'tier', 'pokedexNumber', 'location'],\n        min: ['min', '_sortArea', 'location'],\n        tier: ['tier', '_sortArea', 'pokedexNumber', 'location'],\n    };\n\n    constructor() {\n        super();\n\n        this.evolution_synonyms = require('./resources/json/evolution_synonyms');\n\n        this.state = {\n            filter: {\n                name: '',\n                area: ''\n            },\n            sortBy: {\n                column: '_sortArea',\n                direction: 'ascending'\n            },\n            sorted: {\n                land: [],\n                water: [],\n                headbutt: [],\n            }\n        };\n\n        this.state.settings = localStorage.getItem('proSpawnsSettings') === null\n            ? require('./resources/json/default_settings')\n            : JSON.parse(localStorage.getItem('proSpawnsSettings'));\n\n        const csv_files = [\n            require('./resources/csv/RawSpawnData.csv'),\n            require('./resources/csv/RawWaterSpawnData.csv'),\n            require('./resources/csv/HeadbuttSpawnData.csv'),\n        ];\n\n        Promise.all(csv_files.map(file => new Promise((resolve, reject) => {\n            Papa.parse(file, {\n                header: true,\n                download: true,\n                skipEmptyLines: true,\n                complete: resolve,\n                error: reject\n            });\n        }))).then(results => {\n\n            this.sourceData = {\n                land: results[0].data.map((data) => this._dataParser(data, 'land')),\n                water: results[1].data.map((data) => this._dataParser(data, 'water')),\n                headbutt: results[2].data.map((data) => this._dataParser(data, 'headbutt')),\n            };\n\n            this.filter();\n\n        });\n    }\n\n    _dataParser(data, type) {\n        delete data.membersAccessible;\n        data.pokedexNumber = data.pokedexNumber.padStart(3, '0');\n        data.membership = data.membership.length > 0;\n        data.morning = !!data.morning;\n        data.day = !!data.day;\n        data.night = !!data.night;\n        data._sortArea = this.regionSorting[data.region] + ' - ' + data.region + ' - ' + data.area;\n        data.min = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$1') : data.levels, 10);\n        data.max = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$2') : data.levels, 10);\n\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n\n        if (typeof data.heldItem === 'string' && data.heldItem.length) {\n            const regex = /(\\[\\[([^\\]|]+)(\\|[^\\]]+)?]])/g;\n            const tokens = data.heldItem.replace(regex, '###$1###').split('###');\n\n            const heldItem = [];\n            tokens.forEach((token, tokenIndex) => {\n                if (token.match(regex)) {\n                    token.replace(regex, (...matches) => {\n                        heldItem.push(<a key={repelId + tokenIndex} href={`https://prowiki.info/index.php?title=Special:Search/${matches[2]}`} target=\"_blank\" rel=\"noopener noreferrer\">{matches[2]}</a>)\n                    });\n                } else {\n                    heldItem.push(token);\n                }\n            });\n            data.heldItem = heldItem;\n        }\n\n        if (!this.repelTrickData.hasOwnProperty(repelId)) {\n            this.repelTrickData[repelId] = {};\n        }\n        if (!this.repelTrickData[repelId].hasOwnProperty(data.max)) {\n            this.repelTrickData[repelId][data.max] = 0;\n        }\n        this.repelTrickData[repelId][data.max]++;\n\n        return data;\n    }\n\n    _filterMatchSynonym(name, fname) {\n        let name_match = false;\n        if (this.state.settings.findPokemonSynonyms && this.evolution_synonyms.hasOwnProperty(name)) {\n            this.evolution_synonyms[name].forEach(synonym => {\n                if (fname.length > 0 && synonym === fname) {\n                    name_match = true;\n                }\n            })\n        }\n        return name_match;\n    }\n\n    filter() {\n        const fname = this.state.filter.name;\n        const farea = this.state.filter.area;\n        try {\n            const fareaReg = new RegExp(farea.replace('*', '.*'), 'i');\n            this.types.forEach(type => {\n                this.filteredData[type] = this.sourceData[type].filter(entry => {\n                    let name_match =\n                        (fname.length > 0 && entry.pokemon === fname)\n                        || this._filterMatchSynonym(entry.pokemon, fname);\n                    return name_match\n                        || (farea.length > 0 && entry._sortArea.match(fareaReg) !== null)\n                });\n            });\n        } catch (e) {\n            // do not throw for invalid regex\n            this.filteredData = _.cloneDeep(this.sourceData);\n        }\n        this.sort();\n    }\n\n    sort() {\n        const sorted = {};\n        this.types.forEach(type => {\n            if (this.state.sortBy.column) {\n                sorted[type] = _.sortBy(this.filteredData[type], this.sortByColumns[this.state.sortBy.column]);\n                if (this.state.sortBy.direction === 'descending') {\n                    sorted['type'] = sorted[type].reverse();\n                }\n            } else {\n                sorted[type] = this.filteredData[type];\n            }\n        });\n        this.setState({sorted: sorted});\n    }\n\n    repelTrickPossible(type, data) {\n        if (data.hasOwnProperty('location') && data.location === 'Fishing') return false;\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n        if (!this.repelTrickData.hasOwnProperty(repelId)) return false;\n\n        const areaRepelData = this.repelTrickData[repelId];\n\n        const prominent_group_count = Math.max(...Object.values(areaRepelData));\n        const prominent_group_max_level_index = Object.values(areaRepelData).indexOf(prominent_group_count);\n        const prominent_group_max_level = Object.keys(areaRepelData)[prominent_group_max_level_index];\n\n        return data.min > prominent_group_max_level;\n    }\n\n    setFilter(filter, e) {\n        if (e) e.preventDefault();\n        if (!filter.hasOwnProperty('name')) filter.name = this.state.filter.name;\n        if (!filter.hasOwnProperty('area')) filter.area = this.state.filter.area;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.filter = filter;\n        this.filter();\n    }\n\n    alternateDirection(direction) {\n        return direction === 'ascending' ? 'descending' : 'ascending';\n    }\n\n    sortBy(column) {\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.sortBy = {\n            column: column,\n            direction: this.state.sortBy.column === column ? this.alternateDirection(this.state.sortBy.direction) : 'ascending'\n        };\n        this.filter();\n    }\n\n    getTierClassName(rarity) {\n        switch (rarity) {\n            case \"1\":\n            case \"Common\":\n                return 'green';\n            case \"2\":\n            case \"3\":\n                return 'olive';\n            case \"4\":\n            case \"5\":\n            case \"Intermediate\":\n                return 'yellow';\n            case \"6\":\n            case \"7\":\n            case \"Rare\":\n                return 'orange';\n            case \"8\":\n            case \"9\":\n                return 'red';\n            default:\n                console.error(rarity);\n                throw new Error('rarity not found');\n        }\n    }\n\n    setSetting(setting, value) {\n        const settings = this.state.settings;\n        settings[setting] = value;\n        this.setState({settings: settings});\n        localStorage.setItem('proSpawnsSettings', JSON.stringify(settings));\n        this.filter();\n    }\n\n    getQuickList() {\n        const quickListData = localStorage.getItem('proSpawnsQuickList');\n        if (quickListData === null) return require('./resources/json/default_quicklist');\n        return JSON.parse(quickListData);\n    }\n\n    saveQuickList(quickListData) {\n        quickListData = quickListData.sort((a, b) => {\n            if (a.id === b.id) return 0;\n            return a.id > b.id ? 1 : -1;\n        });\n        localStorage.setItem('proSpawnsQuickList', JSON.stringify(quickListData));\n        this.forceUpdate();\n    }\n\n    addToQuickList(id, name) {\n        if (!this.inQuickList(id)) {\n            const quickListData = this.getQuickList();\n            quickListData.push({id: id, name: name});\n            this.saveQuickList(quickListData)\n        }\n    }\n\n    removeFromQuickList(id) {\n        const quickListData = this.getQuickList();\n        _.remove(quickListData, {id: id});\n        this.saveQuickList(quickListData);\n    }\n\n    inQuickList(id) {\n        return _.find(this.getQuickList(), {id: id}) !== undefined;\n    }\n\n    renderQuickList() {\n        const quickListData = this.getQuickList();\n        return (\n            !quickListData ? null :\n            <Segment>\n                <List horizontal >\n                    {quickListData.map((entry, index) => (\n                        <List.Item key={index}>\n                            <Button className='btn-lnk' onClick={() => this.setFilter({name: entry.name, area: ''})}>\n                                <i className={`pokedex-sprite pokedex-sprite-${entry.id}`}/>\n                                {entry.name}\n                            </Button>\n                        </List.Item>))}\n                </List>\n            </Segment>\n        );\n    }\n\n    render() {\n        const icon_morning = <img src=\"https://img.pokemondb.net/images/locations/morning.png\" alt=\"Morning\" title=\"Morning\"/>;\n        const icon_day = <img src=\"https://img.pokemondb.net/images/locations/day.png\" alt=\"Day\" title=\"Day\"/>;\n        const icon_night = <img src=\"https://img.pokemondb.net/images/locations/night.png\" alt=\"Night\" title=\"Night\"/>;\n\n        const icon_rod = <img src=\"https://img.pokemondb.net/sprites/items/fishing-rod.png\" alt=\"Fishing Rod\"/>;\n\n        const icons_rod = {\n            Old: <img src=\"https://img.pokemondb.net/sprites/items/old-rod.png\" alt=\"Old Rod\" title=\"Old Rod\"/>,\n            Good: <img src=\"https://img.pokemondb.net/sprites/items/good-rod.png\" alt=\"Good Rod\" title=\"Good Rod\"/>,\n            Super: <img src=\"https://img.pokemondb.net/sprites/items/super-rod.png\" alt=\"Super Rod\" title=\"Super Rod\"/>,\n        };\n\n        const {column, direction} = this.state.sortBy;\n\n        const number_of_results = [].concat(...Object.values(this.state.sorted)).length;\n\n        return (\n            <Container>\n                <Segment>\n                    <Form>\n                        <Dropdown\n                            placeholder='pokemon name...'\n                            search\n                            selection\n                            clearable\n                            value={this.state.filter.name}\n                            onChange={(e, obj) => this.setFilter({name: obj.value})}\n                            options={require('./resources/json/pokemon_names').map(name => {return {key: name, value: name, text: name}})}\n                        />\n\n                        &nbsp;\n                        &nbsp;\n\n                        <Input\n                            value={this.state.filter.area}\n                            onChange={(e) => this.setFilter({area: e.target.value})}\n                            icon={{ name: 'close', link: true, onClick: () => this.setFilter({area: ''})}}\n                            placeholder='region/area (regex)...'\n                        />\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        <strong>{number_of_results} results</strong>\n                        <Form.Field>\n                            <Checkbox label='Include evolutions' checked={this.state.settings.findPokemonSynonyms} onClick={() => this.setSetting('findPokemonSynonyms', !this.state.settings.findPokemonSynonyms)}/>\n                        </Form.Field>\n                    </Form>\n                </Segment>\n\n                {number_of_results > 125 ?\n                    <Segment>Too many results to display</Segment>\n                    :this.types.map(type => {\n                    const data = this.state.sorted[type];\n                    return (\n                        <Table key={type} compact='very' basic className={type} sortable unstackable>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell sorted={column === '_sortArea' ? direction : null} onClick={() => this.sortBy('_sortArea')}>\n                                        Region - Area\n                                    </Table.HeaderCell>\n                                    <Table.HeaderCell sorted={column === 'pokedexNumber' ? direction : null} onClick={() => this.sortBy('pokedexNumber')}>\n                                        ID\n                                    </Table.HeaderCell>\n                                    <Table.HeaderCell>Pokemon</Table.HeaderCell>\n                                    {type !== 'headbutt' ? (\n                                            <React.Fragment>\n                                                <Table.HeaderCell>M</Table.HeaderCell>\n                                                <Table.HeaderCell>D</Table.HeaderCell>\n                                                <Table.HeaderCell>N</Table.HeaderCell>\n                                            </React.Fragment>\n                                        )\n                                        : null}\n                                    {type === 'water'\n                                        ? <Table.HeaderCell>{icon_rod}</Table.HeaderCell>\n                                        : null}\n                                    <Table.HeaderCell sorted={column === 'tier' ? direction : null} onClick={() => this.sortBy('tier')}>\n                                        Tier\n                                    </Table.HeaderCell>\n                                    <Table.HeaderCell>MS?</Table.HeaderCell>\n                                    <Table.HeaderCell textAlign='right' sorted={column === 'min' ? direction : null} onClick={() => this.sortBy('min')}>\n                                        Levels\n                                    </Table.HeaderCell>\n                                    {type !== 'headbutt' ? (\n                                        <Table.HeaderCell>Repel</Table.HeaderCell>\n                                    ) : null}\n                                    <Table.HeaderCell>Item</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                {data.map(entry => {\n                                    let repelTrickPossible = this.repelTrickPossible(type, entry);\n                                    return (\n                                        <Table.Row key={JSON.stringify(entry)}>\n                                            <Table.Cell>\n                                                <Button className='btn-lnk' onClick={(e) => this.setFilter({name: '', area: entry.area + '$'}, e)}>\n                                                    {entry.region} - {entry.area}\n                                                </Button>\n                                            </Table.Cell>\n                                            <Table.Cell>{entry.pokedexNumber}</Table.Cell>\n                                            <Table.Cell>\n                                                <i className={`pokedex-sprite pokedex-sprite-${entry.pokedexNumber}`}/>\n                                                <Button className='btn-lnk' onClick={(e) => this.setFilter({name: entry.pokemon, area: ''}, e)}>{entry.pokemon}</Button>\n                                                &nbsp;\n                                                <a href={`https://pokemondb.net/pokedex/${entry.pokedexNumber}`} target='_blank' rel=\"noopener noreferrer\">\n                                                    <Icon name='external alternate'/>\n                                                </a>\n                                                &nbsp;\n                                                {this.inQuickList(entry.pokedexNumber)\n                                                    ? (\n\n                                                        <Button className='btn-lnk' onClick={() => this.removeFromQuickList(entry.pokedexNumber)}>\n                                                            <i aria-hidden=\"true\" className=\"bookmark green icon\"/>\n                                                        </Button>\n                                                    ) : (\n                                                        <Button className='btn-lnk' onClick={() => this.addToQuickList(entry.pokedexNumber, entry.pokemon)}>\n                                                            <i aria-hidden=\"true\" className=\"bookmark outline grey icon\"/>\n                                                        </Button>\n                                                    )\n                                                }\n                                            </Table.Cell>\n                                            {type !== 'headbutt' ? (\n                                                    <React.Fragment>\n                                                        <Table.Cell className={entry.morning ? 'yellow' : ''}>{entry.morning ? icon_morning : null}</Table.Cell>\n                                                        <Table.Cell className={entry.day ? 'blue' : ''}>{entry.day ? icon_day : null}</Table.Cell>\n                                                        <Table.Cell className={entry.night ? 'grey' : ''}>{entry.night ? icon_night : null}</Table.Cell>\n                                                    </React.Fragment>\n                                                )\n                                                : null}\n                                            {type === 'water'\n                                                ? <Table.Cell>{entry.rod ? icons_rod[entry.rod] : null}</Table.Cell>\n                                                : null}\n                                            <Table.Cell className={this.getTierClassName(entry.tier)} textAlign='center'>{entry.tier}</Table.Cell>\n                                            <Table.Cell textAlign='center' className={entry.membership ? 'violet' : ''}>{entry.membership ?\n                                                <i className='ui icon dollar sign white'/> : null}</Table.Cell>\n                                            <Table.Cell textAlign='right'>{entry.levels}</Table.Cell>\n                                            {type !== 'headbutt' ? (\n                                                <Table.Cell textAlign='center' className={repelTrickPossible ? 'teal' : ''}>{repelTrickPossible ? 'Yes' : null}</Table.Cell>\n                                            ) : null}\n                                            <Table.Cell>{entry.heldItem}</Table.Cell>\n                                        </Table.Row>\n                                    );\n                                })}\n                            </Table.Body>\n                        </Table>\n                    );\n                })}\n\n                {this.renderQuickList()}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}